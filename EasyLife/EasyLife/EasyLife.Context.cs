//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EasyLife
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class EasyLifeEntities : DbContext
    {
        public EasyLifeEntities()
            : base("name=EasyLifeEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<BODEGA> BODEGA { get; set; }
        public virtual DbSet<BOLETA> BOLETA { get; set; }
        public virtual DbSet<BOLETA_GASTO> BOLETA_GASTO { get; set; }
        public virtual DbSet<CENTRO> CENTRO { get; set; }
        public virtual DbSet<CIUDAD> CIUDAD { get; set; }
        public virtual DbSet<COMUNA> COMUNA { get; set; }
        public virtual DbSet<CONDOMINIO> CONDOMINIO { get; set; }
        public virtual DbSet<CONSERJE> CONSERJE { get; set; }
        public virtual DbSet<CONTROL_ILUMINACION_DEPARTAMENTO> CONTROL_ILUMINACION_DEPARTAMENTO { get; set; }
        public virtual DbSet<CONTROL_ILUMINACION_EDIFICIO> CONTROL_ILUMINACION_EDIFICIO { get; set; }
        public virtual DbSet<DEPARTAMENTO> DEPARTAMENTO { get; set; }
        public virtual DbSet<DIRECCION> DIRECCION { get; set; }
        public virtual DbSet<EDIFICIO> EDIFICIO { get; set; }
        public virtual DbSet<ESTACIONAMIENTO> ESTACIONAMIENTO { get; set; }
        public virtual DbSet<ESTACIONAMIENTO_VISITA> ESTACIONAMIENTO_VISITA { get; set; }
        public virtual DbSet<GASTOS_COMUNES> GASTOS_COMUNES { get; set; }
        public virtual DbSet<HORARIO_CENTRO> HORARIO_CENTRO { get; set; }
        public virtual DbSet<LOGIN> LOGIN { get; set; }
        public virtual DbSet<LUZ_DEPARTAMENTO> LUZ_DEPARTAMENTO { get; set; }
        public virtual DbSet<LUZ_EDIFICIO> LUZ_EDIFICIO { get; set; }
        public virtual DbSet<MENSAJE> MENSAJE { get; set; }
        public virtual DbSet<MULTA> MULTA { get; set; }
        public virtual DbSet<PERSONA> PERSONA { get; set; }
        public virtual DbSet<REGION> REGION { get; set; }
        public virtual DbSet<RESERVA_CENTRO> RESERVA_CENTRO { get; set; }
        public virtual DbSet<ROL> ROL { get; set; }
        public virtual DbSet<TIPO_CENTRO> TIPO_CENTRO { get; set; }
        public virtual DbSet<TIPO_MENSAJE> TIPO_MENSAJE { get; set; }
        public virtual DbSet<TURNO> TURNO { get; set; }
    
        public virtual int asignarAdministradorCondominio(Nullable<long> administrador, Nullable<long> condominio)
        {
            var administradorParameter = administrador.HasValue ?
                new ObjectParameter("administrador", administrador) :
                new ObjectParameter("administrador", typeof(long));
    
            var condominioParameter = condominio.HasValue ?
                new ObjectParameter("condominio", condominio) :
                new ObjectParameter("condominio", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("asignarAdministradorCondominio", administradorParameter, condominioParameter);
        }
    
        public virtual int AsignarBoletaEst(Nullable<long> estacionamiento, Nullable<long> boleta)
        {
            var estacionamientoParameter = estacionamiento.HasValue ?
                new ObjectParameter("estacionamiento", estacionamiento) :
                new ObjectParameter("estacionamiento", typeof(long));
    
            var boletaParameter = boleta.HasValue ?
                new ObjectParameter("boleta", boleta) :
                new ObjectParameter("boleta", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AsignarBoletaEst", estacionamientoParameter, boletaParameter);
        }
    
        public virtual int AsignarBoletaGasto(Nullable<long> boleta, Nullable<long> gasto, string mes, string año)
        {
            var boletaParameter = boleta.HasValue ?
                new ObjectParameter("boleta", boleta) :
                new ObjectParameter("boleta", typeof(long));
    
            var gastoParameter = gasto.HasValue ?
                new ObjectParameter("gasto", gasto) :
                new ObjectParameter("gasto", typeof(long));
    
            var mesParameter = mes != null ?
                new ObjectParameter("mes", mes) :
                new ObjectParameter("mes", typeof(string));
    
            var añoParameter = año != null ?
                new ObjectParameter("año", año) :
                new ObjectParameter("año", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AsignarBoletaGasto", boletaParameter, gastoParameter, mesParameter, añoParameter);
        }
    
        public virtual int AsignarBoletaReserva(Nullable<long> reserva, Nullable<long> boleta)
        {
            var reservaParameter = reserva.HasValue ?
                new ObjectParameter("reserva", reserva) :
                new ObjectParameter("reserva", typeof(long));
    
            var boletaParameter = boleta.HasValue ?
                new ObjectParameter("boleta", boleta) :
                new ObjectParameter("boleta", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AsignarBoletaReserva", reservaParameter, boletaParameter);
        }
    
        public virtual int asignarConserjeCondominio(Nullable<long> conserje, Nullable<long> condominio)
        {
            var conserjeParameter = conserje.HasValue ?
                new ObjectParameter("conserje", conserje) :
                new ObjectParameter("conserje", typeof(long));
    
            var condominioParameter = condominio.HasValue ?
                new ObjectParameter("condominio", condominio) :
                new ObjectParameter("condominio", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("asignarConserjeCondominio", conserjeParameter, condominioParameter);
        }
    
        public virtual int AsignarGasto(Nullable<long> edificio, Nullable<long> gasto)
        {
            var edificioParameter = edificio.HasValue ?
                new ObjectParameter("edificio", edificio) :
                new ObjectParameter("edificio", typeof(long));
    
            var gastoParameter = gasto.HasValue ?
                new ObjectParameter("gasto", gasto) :
                new ObjectParameter("gasto", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AsignarGasto", edificioParameter, gastoParameter);
        }
    
        public virtual int AsignarLuzDep(Nullable<long> dep, Nullable<long> luz)
        {
            var depParameter = dep.HasValue ?
                new ObjectParameter("dep", dep) :
                new ObjectParameter("dep", typeof(long));
    
            var luzParameter = luz.HasValue ?
                new ObjectParameter("luz", luz) :
                new ObjectParameter("luz", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AsignarLuzDep", depParameter, luzParameter);
        }
    
        public virtual int AsignarLuzEdi(Nullable<long> edificio, Nullable<long> luz)
        {
            var edificioParameter = edificio.HasValue ?
                new ObjectParameter("edificio", edificio) :
                new ObjectParameter("edificio", typeof(long));
    
            var luzParameter = luz.HasValue ?
                new ObjectParameter("luz", luz) :
                new ObjectParameter("luz", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AsignarLuzEdi", edificioParameter, luzParameter);
        }
    
        public virtual int asignarMultaDep(Nullable<long> departamento, Nullable<int> multa, string motivo)
        {
            var departamentoParameter = departamento.HasValue ?
                new ObjectParameter("departamento", departamento) :
                new ObjectParameter("departamento", typeof(long));
    
            var multaParameter = multa.HasValue ?
                new ObjectParameter("multa", multa) :
                new ObjectParameter("multa", typeof(int));
    
            var motivoParameter = motivo != null ?
                new ObjectParameter("motivo", motivo) :
                new ObjectParameter("motivo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("asignarMultaDep", departamentoParameter, multaParameter, motivoParameter);
        }
    
        public virtual ObjectResult<boletaGasto_Result> boletaGasto(Nullable<long> persona)
        {
            var personaParameter = persona.HasValue ?
                new ObjectParameter("persona", persona) :
                new ObjectParameter("persona", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<boletaGasto_Result>("boletaGasto", personaParameter);
        }
    
        public virtual int CambiarEstadoEst(Nullable<long> estacionamiento, Nullable<bool> estado)
        {
            var estacionamientoParameter = estacionamiento.HasValue ?
                new ObjectParameter("estacionamiento", estacionamiento) :
                new ObjectParameter("estacionamiento", typeof(long));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CambiarEstadoEst", estacionamientoParameter, estadoParameter);
        }
    
        public virtual int CambiarEstCDep(Nullable<long> control, Nullable<bool> estado)
        {
            var controlParameter = control.HasValue ?
                new ObjectParameter("control", control) :
                new ObjectParameter("control", typeof(long));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CambiarEstCDep", controlParameter, estadoParameter);
        }
    
        public virtual int CambiarEstCEdi(Nullable<long> control, Nullable<bool> estado)
        {
            var controlParameter = control.HasValue ?
                new ObjectParameter("control", control) :
                new ObjectParameter("control", typeof(long));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CambiarEstCEdi", controlParameter, estadoParameter);
        }
    
        public virtual int CambiarEstLuzDep(Nullable<long> luz, Nullable<bool> estado)
        {
            var luzParameter = luz.HasValue ?
                new ObjectParameter("luz", luz) :
                new ObjectParameter("luz", typeof(long));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CambiarEstLuzDep", luzParameter, estadoParameter);
        }
    
        public virtual int CambiarEstLuzEdi(Nullable<long> luz, Nullable<bool> estado)
        {
            var luzParameter = luz.HasValue ?
                new ObjectParameter("luz", luz) :
                new ObjectParameter("luz", typeof(long));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CambiarEstLuzEdi", luzParameter, estadoParameter);
        }
    
        public virtual int cambioEstadoPersona(Nullable<long> persona, Nullable<bool> estado)
        {
            var personaParameter = persona.HasValue ?
                new ObjectParameter("persona", persona) :
                new ObjectParameter("persona", typeof(long));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("cambioEstadoPersona", personaParameter, estadoParameter);
        }
    
        public virtual int CambioEstHorario(Nullable<long> horario, Nullable<bool> estado)
        {
            var horarioParameter = horario.HasValue ?
                new ObjectParameter("horario", horario) :
                new ObjectParameter("horario", typeof(long));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CambioEstHorario", horarioParameter, estadoParameter);
        }
    
        public virtual int CambioEstMensaje(Nullable<long> mensaje, Nullable<bool> estado)
        {
            var mensajeParameter = mensaje.HasValue ?
                new ObjectParameter("mensaje", mensaje) :
                new ObjectParameter("mensaje", typeof(long));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CambioEstMensaje", mensajeParameter, estadoParameter);
        }
    
        public virtual int CambioEstPersona(Nullable<long> persona, Nullable<bool> estado)
        {
            var personaParameter = persona.HasValue ?
                new ObjectParameter("persona", persona) :
                new ObjectParameter("persona", typeof(long));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CambioEstPersona", personaParameter, estadoParameter);
        }
    
        public virtual int CambioRol(Nullable<long> persona, Nullable<long> rol)
        {
            var personaParameter = persona.HasValue ?
                new ObjectParameter("persona", persona) :
                new ObjectParameter("persona", typeof(long));
    
            var rolParameter = rol.HasValue ?
                new ObjectParameter("rol", rol) :
                new ObjectParameter("rol", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CambioRol", personaParameter, rolParameter);
        }
    
        public virtual int deleteCondominio(Nullable<long> condominio)
        {
            var condominioParameter = condominio.HasValue ?
                new ObjectParameter("condominio", condominio) :
                new ObjectParameter("condominio", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("deleteCondominio", condominioParameter);
        }
    
        public virtual int deleteGasto(Nullable<long> gasto)
        {
            var gastoParameter = gasto.HasValue ?
                new ObjectParameter("gasto", gasto) :
                new ObjectParameter("gasto", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("deleteGasto", gastoParameter);
        }
    
        public virtual int deleteMulta(Nullable<long> multa)
        {
            var multaParameter = multa.HasValue ?
                new ObjectParameter("multa", multa) :
                new ObjectParameter("multa", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("deleteMulta", multaParameter);
        }
    
        public virtual int deletePersona(Nullable<long> persona)
        {
            var personaParameter = persona.HasValue ?
                new ObjectParameter("persona", persona) :
                new ObjectParameter("persona", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("deletePersona", personaParameter);
        }
    
        public virtual int deleteTurno(Nullable<long> turno)
        {
            var turnoParameter = turno.HasValue ?
                new ObjectParameter("turno", turno) :
                new ObjectParameter("turno", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("deleteTurno", turnoParameter);
        }
    
        public virtual int denegarAdministradorCondominio(Nullable<long> condominio)
        {
            var condominioParameter = condominio.HasValue ?
                new ObjectParameter("condominio", condominio) :
                new ObjectParameter("condominio", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("denegarAdministradorCondominio", condominioParameter);
        }
    
        public virtual int denegarConserjeCondominio(Nullable<long> conserje)
        {
            var conserjeParameter = conserje.HasValue ?
                new ObjectParameter("conserje", conserje) :
                new ObjectParameter("conserje", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("denegarConserjeCondominio", conserjeParameter);
        }
    
        public virtual ObjectResult<depOcupados_Result> depOcupados()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<depOcupados_Result>("depOcupados");
        }
    
        public virtual int insertBoletaEst(Nullable<long> est, Nullable<long> persona, Nullable<long> costo)
        {
            var estParameter = est.HasValue ?
                new ObjectParameter("est", est) :
                new ObjectParameter("est", typeof(long));
    
            var personaParameter = persona.HasValue ?
                new ObjectParameter("persona", persona) :
                new ObjectParameter("persona", typeof(long));
    
            var costoParameter = costo.HasValue ?
                new ObjectParameter("costo", costo) :
                new ObjectParameter("costo", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insertBoletaEst", estParameter, personaParameter, costoParameter);
        }
    
        public virtual int insertBoletaGasto(Nullable<long> persona, Nullable<long> costo, Nullable<long> dep, string codigo)
        {
            var personaParameter = persona.HasValue ?
                new ObjectParameter("persona", persona) :
                new ObjectParameter("persona", typeof(long));
    
            var costoParameter = costo.HasValue ?
                new ObjectParameter("costo", costo) :
                new ObjectParameter("costo", typeof(long));
    
            var depParameter = dep.HasValue ?
                new ObjectParameter("dep", dep) :
                new ObjectParameter("dep", typeof(long));
    
            var codigoParameter = codigo != null ?
                new ObjectParameter("codigo", codigo) :
                new ObjectParameter("codigo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insertBoletaGasto", personaParameter, costoParameter, depParameter, codigoParameter);
        }
    
        public virtual int insertBoletaReserva(Nullable<long> persona, Nullable<long> costo, Nullable<long> dep, string codigo)
        {
            var personaParameter = persona.HasValue ?
                new ObjectParameter("persona", persona) :
                new ObjectParameter("persona", typeof(long));
    
            var costoParameter = costo.HasValue ?
                new ObjectParameter("costo", costo) :
                new ObjectParameter("costo", typeof(long));
    
            var depParameter = dep.HasValue ?
                new ObjectParameter("dep", dep) :
                new ObjectParameter("dep", typeof(long));
    
            var codigoParameter = codigo != null ?
                new ObjectParameter("codigo", codigo) :
                new ObjectParameter("codigo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insertBoletaReserva", personaParameter, costoParameter, depParameter, codigoParameter);
        }
    
        public virtual int insertCentro(Nullable<long> tipo, Nullable<long> edificio, string nombre, Nullable<int> costo)
        {
            var tipoParameter = tipo.HasValue ?
                new ObjectParameter("tipo", tipo) :
                new ObjectParameter("tipo", typeof(long));
    
            var edificioParameter = edificio.HasValue ?
                new ObjectParameter("edificio", edificio) :
                new ObjectParameter("edificio", typeof(long));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var costoParameter = costo.HasValue ?
                new ObjectParameter("costo", costo) :
                new ObjectParameter("costo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insertCentro", tipoParameter, edificioParameter, nombreParameter, costoParameter);
        }
    
        public virtual int insertCondominio(Nullable<long> direccion, Nullable<long> persona, string nombre, Nullable<int> precio)
        {
            var direccionParameter = direccion.HasValue ?
                new ObjectParameter("direccion", direccion) :
                new ObjectParameter("direccion", typeof(long));
    
            var personaParameter = persona.HasValue ?
                new ObjectParameter("persona", persona) :
                new ObjectParameter("persona", typeof(long));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var precioParameter = precio.HasValue ?
                new ObjectParameter("precio", precio) :
                new ObjectParameter("precio", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insertCondominio", direccionParameter, personaParameter, nombreParameter, precioParameter);
        }
    
        public virtual int insertConserje(Nullable<long> persona, Nullable<long> condominmio)
        {
            var personaParameter = persona.HasValue ?
                new ObjectParameter("persona", persona) :
                new ObjectParameter("persona", typeof(long));
    
            var condominmioParameter = condominmio.HasValue ?
                new ObjectParameter("condominmio", condominmio) :
                new ObjectParameter("condominmio", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insertConserje", personaParameter, condominmioParameter);
        }
    
        public virtual int insertControlDep(Nullable<long> luz, string horaI, string horaT, Nullable<bool> estado)
        {
            var luzParameter = luz.HasValue ?
                new ObjectParameter("luz", luz) :
                new ObjectParameter("luz", typeof(long));
    
            var horaIParameter = horaI != null ?
                new ObjectParameter("horaI", horaI) :
                new ObjectParameter("horaI", typeof(string));
    
            var horaTParameter = horaT != null ?
                new ObjectParameter("horaT", horaT) :
                new ObjectParameter("horaT", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insertControlDep", luzParameter, horaIParameter, horaTParameter, estadoParameter);
        }
    
        public virtual int insertControlEdificio(Nullable<long> luz, string horaI, string horaT, Nullable<bool> estado)
        {
            var luzParameter = luz.HasValue ?
                new ObjectParameter("luz", luz) :
                new ObjectParameter("luz", typeof(long));
    
            var horaIParameter = horaI != null ?
                new ObjectParameter("horaI", horaI) :
                new ObjectParameter("horaI", typeof(string));
    
            var horaTParameter = horaT != null ?
                new ObjectParameter("horaT", horaT) :
                new ObjectParameter("horaT", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insertControlEdificio", luzParameter, horaIParameter, horaTParameter, estadoParameter);
        }
    
        public virtual int insertDepartamento(Nullable<long> edificio, string numero, Nullable<double> dimension)
        {
            var edificioParameter = edificio.HasValue ?
                new ObjectParameter("edificio", edificio) :
                new ObjectParameter("edificio", typeof(long));
    
            var numeroParameter = numero != null ?
                new ObjectParameter("numero", numero) :
                new ObjectParameter("numero", typeof(string));
    
            var dimensionParameter = dimension.HasValue ?
                new ObjectParameter("dimension", dimension) :
                new ObjectParameter("dimension", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insertDepartamento", edificioParameter, numeroParameter, dimensionParameter);
        }
    
        public virtual int insertDireccion(Nullable<long> comuna, string calle, Nullable<int> numero)
        {
            var comunaParameter = comuna.HasValue ?
                new ObjectParameter("comuna", comuna) :
                new ObjectParameter("comuna", typeof(long));
    
            var calleParameter = calle != null ?
                new ObjectParameter("calle", calle) :
                new ObjectParameter("calle", typeof(string));
    
            var numeroParameter = numero.HasValue ?
                new ObjectParameter("numero", numero) :
                new ObjectParameter("numero", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insertDireccion", comunaParameter, calleParameter, numeroParameter);
        }
    
        public virtual int insertEdificio(Nullable<long> condominio, string nombre, Nullable<int> piso, Nullable<int> departamentos, Nullable<double> dimension)
        {
            var condominioParameter = condominio.HasValue ?
                new ObjectParameter("condominio", condominio) :
                new ObjectParameter("condominio", typeof(long));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var pisoParameter = piso.HasValue ?
                new ObjectParameter("piso", piso) :
                new ObjectParameter("piso", typeof(int));
    
            var departamentosParameter = departamentos.HasValue ?
                new ObjectParameter("departamentos", departamentos) :
                new ObjectParameter("departamentos", typeof(int));
    
            var dimensionParameter = dimension.HasValue ?
                new ObjectParameter("dimension", dimension) :
                new ObjectParameter("dimension", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insertEdificio", condominioParameter, nombreParameter, pisoParameter, departamentosParameter, dimensionParameter);
        }
    
        public virtual int insertEstacionamiento(Nullable<long> edificio, string numero, Nullable<int> precio)
        {
            var edificioParameter = edificio.HasValue ?
                new ObjectParameter("edificio", edificio) :
                new ObjectParameter("edificio", typeof(long));
    
            var numeroParameter = numero != null ?
                new ObjectParameter("numero", numero) :
                new ObjectParameter("numero", typeof(string));
    
            var precioParameter = precio.HasValue ?
                new ObjectParameter("precio", precio) :
                new ObjectParameter("precio", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insertEstacionamiento", edificioParameter, numeroParameter, precioParameter);
        }
    
        public virtual int insertGasto(Nullable<long> edificio, Nullable<int> conserje, Nullable<int> guardia, Nullable<int> mantAreas, Nullable<int> camaras, Nullable<int> artAseo, Nullable<int> aseo, Nullable<int> ascensor, Nullable<int> agua, Nullable<int> otro, Nullable<int> total)
        {
            var edificioParameter = edificio.HasValue ?
                new ObjectParameter("edificio", edificio) :
                new ObjectParameter("edificio", typeof(long));
    
            var conserjeParameter = conserje.HasValue ?
                new ObjectParameter("conserje", conserje) :
                new ObjectParameter("conserje", typeof(int));
    
            var guardiaParameter = guardia.HasValue ?
                new ObjectParameter("guardia", guardia) :
                new ObjectParameter("guardia", typeof(int));
    
            var mantAreasParameter = mantAreas.HasValue ?
                new ObjectParameter("mantAreas", mantAreas) :
                new ObjectParameter("mantAreas", typeof(int));
    
            var camarasParameter = camaras.HasValue ?
                new ObjectParameter("camaras", camaras) :
                new ObjectParameter("camaras", typeof(int));
    
            var artAseoParameter = artAseo.HasValue ?
                new ObjectParameter("artAseo", artAseo) :
                new ObjectParameter("artAseo", typeof(int));
    
            var aseoParameter = aseo.HasValue ?
                new ObjectParameter("aseo", aseo) :
                new ObjectParameter("aseo", typeof(int));
    
            var ascensorParameter = ascensor.HasValue ?
                new ObjectParameter("ascensor", ascensor) :
                new ObjectParameter("ascensor", typeof(int));
    
            var aguaParameter = agua.HasValue ?
                new ObjectParameter("agua", agua) :
                new ObjectParameter("agua", typeof(int));
    
            var otroParameter = otro.HasValue ?
                new ObjectParameter("otro", otro) :
                new ObjectParameter("otro", typeof(int));
    
            var totalParameter = total.HasValue ?
                new ObjectParameter("total", total) :
                new ObjectParameter("total", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insertGasto", edificioParameter, conserjeParameter, guardiaParameter, mantAreasParameter, camarasParameter, artAseoParameter, aseoParameter, ascensorParameter, aguaParameter, otroParameter, totalParameter);
        }
    
        public virtual int insertHorario(Nullable<long> centro, string dia, string horaI, string horaT, string horaC)
        {
            var centroParameter = centro.HasValue ?
                new ObjectParameter("centro", centro) :
                new ObjectParameter("centro", typeof(long));
    
            var diaParameter = dia != null ?
                new ObjectParameter("dia", dia) :
                new ObjectParameter("dia", typeof(string));
    
            var horaIParameter = horaI != null ?
                new ObjectParameter("horaI", horaI) :
                new ObjectParameter("horaI", typeof(string));
    
            var horaTParameter = horaT != null ?
                new ObjectParameter("horaT", horaT) :
                new ObjectParameter("horaT", typeof(string));
    
            var horaCParameter = horaC != null ?
                new ObjectParameter("horaC", horaC) :
                new ObjectParameter("horaC", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insertHorario", centroParameter, diaParameter, horaIParameter, horaTParameter, horaCParameter);
        }
    
        public virtual int insertLuzDep(string codigo)
        {
            var codigoParameter = codigo != null ?
                new ObjectParameter("codigo", codigo) :
                new ObjectParameter("codigo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insertLuzDep", codigoParameter);
        }
    
        public virtual int insertLuzEdificio(string codigo)
        {
            var codigoParameter = codigo != null ?
                new ObjectParameter("codigo", codigo) :
                new ObjectParameter("codigo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insertLuzEdificio", codigoParameter);
        }
    
        public virtual int insertPersona(Nullable<long> rol, string nombre, string apellido, string rut, string telefono, string correo, Nullable<bool> luz, string sexo)
        {
            var rolParameter = rol.HasValue ?
                new ObjectParameter("rol", rol) :
                new ObjectParameter("rol", typeof(long));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var apellidoParameter = apellido != null ?
                new ObjectParameter("apellido", apellido) :
                new ObjectParameter("apellido", typeof(string));
    
            var rutParameter = rut != null ?
                new ObjectParameter("rut", rut) :
                new ObjectParameter("rut", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("telefono", telefono) :
                new ObjectParameter("telefono", typeof(string));
    
            var correoParameter = correo != null ?
                new ObjectParameter("correo", correo) :
                new ObjectParameter("correo", typeof(string));
    
            var luzParameter = luz.HasValue ?
                new ObjectParameter("luz", luz) :
                new ObjectParameter("luz", typeof(bool));
    
            var sexoParameter = sexo != null ?
                new ObjectParameter("sexo", sexo) :
                new ObjectParameter("sexo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insertPersona", rolParameter, nombreParameter, apellidoParameter, rutParameter, telefonoParameter, correoParameter, luzParameter, sexoParameter);
        }
    
        public virtual int insertReserva(Nullable<long> dep, Nullable<long> centro, Nullable<long> horario)
        {
            var depParameter = dep.HasValue ?
                new ObjectParameter("dep", dep) :
                new ObjectParameter("dep", typeof(long));
    
            var centroParameter = centro.HasValue ?
                new ObjectParameter("centro", centro) :
                new ObjectParameter("centro", typeof(long));
    
            var horarioParameter = horario.HasValue ?
                new ObjectParameter("horario", horario) :
                new ObjectParameter("horario", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insertReserva", depParameter, centroParameter, horarioParameter);
        }
    
        public virtual int insertReservaConserje(Nullable<long> dep, Nullable<long> centro, Nullable<long> horario, Nullable<long> boleta)
        {
            var depParameter = dep.HasValue ?
                new ObjectParameter("dep", dep) :
                new ObjectParameter("dep", typeof(long));
    
            var centroParameter = centro.HasValue ?
                new ObjectParameter("centro", centro) :
                new ObjectParameter("centro", typeof(long));
    
            var horarioParameter = horario.HasValue ?
                new ObjectParameter("horario", horario) :
                new ObjectParameter("horario", typeof(long));
    
            var boletaParameter = boleta.HasValue ?
                new ObjectParameter("boleta", boleta) :
                new ObjectParameter("boleta", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insertReservaConserje", depParameter, centroParameter, horarioParameter, boletaParameter);
        }
    
        public virtual int insertTurno(string descripcion, string fechaI, string fechaT)
        {
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            var fechaIParameter = fechaI != null ?
                new ObjectParameter("fechaI", fechaI) :
                new ObjectParameter("fechaI", typeof(string));
    
            var fechaTParameter = fechaT != null ?
                new ObjectParameter("fechaT", fechaT) :
                new ObjectParameter("fechaT", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insertTurno", descripcionParameter, fechaIParameter, fechaTParameter);
        }
    
        public virtual int insertTurno_Conserje(Nullable<long> conserje)
        {
            var conserjeParameter = conserje.HasValue ?
                new ObjectParameter("conserje", conserje) :
                new ObjectParameter("conserje", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insertTurno_Conserje", conserjeParameter);
        }
    
        public virtual ObjectResult<turnosConserje_Result> turnosConserje()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<turnosConserje_Result>("turnosConserje");
        }
    
        public virtual int updateBoletaReserva(Nullable<long> costo, Nullable<long> boleta)
        {
            var costoParameter = costo.HasValue ?
                new ObjectParameter("costo", costo) :
                new ObjectParameter("costo", typeof(long));
    
            var boletaParameter = boleta.HasValue ?
                new ObjectParameter("boleta", boleta) :
                new ObjectParameter("boleta", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updateBoletaReserva", costoParameter, boletaParameter);
        }
    
        public virtual int UpdateCentro(Nullable<long> centro, Nullable<long> tipo, Nullable<long> edificio, string nombre, Nullable<int> costo)
        {
            var centroParameter = centro.HasValue ?
                new ObjectParameter("centro", centro) :
                new ObjectParameter("centro", typeof(long));
    
            var tipoParameter = tipo.HasValue ?
                new ObjectParameter("tipo", tipo) :
                new ObjectParameter("tipo", typeof(long));
    
            var edificioParameter = edificio.HasValue ?
                new ObjectParameter("edificio", edificio) :
                new ObjectParameter("edificio", typeof(long));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var costoParameter = costo.HasValue ?
                new ObjectParameter("costo", costo) :
                new ObjectParameter("costo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateCentro", centroParameter, tipoParameter, edificioParameter, nombreParameter, costoParameter);
        }
    
        public virtual int updateCondominio(Nullable<long> condominio, Nullable<long> direccion, Nullable<long> persona, string nombre, Nullable<int> precio)
        {
            var condominioParameter = condominio.HasValue ?
                new ObjectParameter("condominio", condominio) :
                new ObjectParameter("condominio", typeof(long));
    
            var direccionParameter = direccion.HasValue ?
                new ObjectParameter("direccion", direccion) :
                new ObjectParameter("direccion", typeof(long));
    
            var personaParameter = persona.HasValue ?
                new ObjectParameter("persona", persona) :
                new ObjectParameter("persona", typeof(long));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var precioParameter = precio.HasValue ?
                new ObjectParameter("precio", precio) :
                new ObjectParameter("precio", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updateCondominio", condominioParameter, direccionParameter, personaParameter, nombreParameter, precioParameter);
        }
    
        public virtual int updateCondominioAdm(Nullable<long> condominio, Nullable<long> persona)
        {
            var condominioParameter = condominio.HasValue ?
                new ObjectParameter("condominio", condominio) :
                new ObjectParameter("condominio", typeof(long));
    
            var personaParameter = persona.HasValue ?
                new ObjectParameter("persona", persona) :
                new ObjectParameter("persona", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updateCondominioAdm", condominioParameter, personaParameter);
        }
    
        public virtual int updateConserje(Nullable<long> conserje, Nullable<long> condominio)
        {
            var conserjeParameter = conserje.HasValue ?
                new ObjectParameter("conserje", conserje) :
                new ObjectParameter("conserje", typeof(long));
    
            var condominioParameter = condominio.HasValue ?
                new ObjectParameter("condominio", condominio) :
                new ObjectParameter("condominio", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updateConserje", conserjeParameter, condominioParameter);
        }
    
        public virtual int updateConserjeCondominio(Nullable<long> conserje, Nullable<long> condominio)
        {
            var conserjeParameter = conserje.HasValue ?
                new ObjectParameter("conserje", conserje) :
                new ObjectParameter("conserje", typeof(long));
    
            var condominioParameter = condominio.HasValue ?
                new ObjectParameter("condominio", condominio) :
                new ObjectParameter("condominio", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updateConserjeCondominio", conserjeParameter, condominioParameter);
        }
    
        public virtual int updateControlDep(Nullable<long> control, Nullable<long> luz, string horaI, string horaT, Nullable<bool> estado)
        {
            var controlParameter = control.HasValue ?
                new ObjectParameter("control", control) :
                new ObjectParameter("control", typeof(long));
    
            var luzParameter = luz.HasValue ?
                new ObjectParameter("luz", luz) :
                new ObjectParameter("luz", typeof(long));
    
            var horaIParameter = horaI != null ?
                new ObjectParameter("horaI", horaI) :
                new ObjectParameter("horaI", typeof(string));
    
            var horaTParameter = horaT != null ?
                new ObjectParameter("horaT", horaT) :
                new ObjectParameter("horaT", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updateControlDep", controlParameter, luzParameter, horaIParameter, horaTParameter, estadoParameter);
        }
    
        public virtual int updateControlEdificio(Nullable<long> control, Nullable<long> luz, string horaI, string horaT, Nullable<bool> estado)
        {
            var controlParameter = control.HasValue ?
                new ObjectParameter("control", control) :
                new ObjectParameter("control", typeof(long));
    
            var luzParameter = luz.HasValue ?
                new ObjectParameter("luz", luz) :
                new ObjectParameter("luz", typeof(long));
    
            var horaIParameter = horaI != null ?
                new ObjectParameter("horaI", horaI) :
                new ObjectParameter("horaI", typeof(string));
    
            var horaTParameter = horaT != null ?
                new ObjectParameter("horaT", horaT) :
                new ObjectParameter("horaT", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updateControlEdificio", controlParameter, luzParameter, horaIParameter, horaTParameter, estadoParameter);
        }
    
        public virtual int updateDepartamento(Nullable<long> departamento, string numero)
        {
            var departamentoParameter = departamento.HasValue ?
                new ObjectParameter("departamento", departamento) :
                new ObjectParameter("departamento", typeof(long));
    
            var numeroParameter = numero != null ?
                new ObjectParameter("numero", numero) :
                new ObjectParameter("numero", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updateDepartamento", departamentoParameter, numeroParameter);
        }
    
        public virtual int UpdateDepartamentoPersona(Nullable<long> departamento, Nullable<long> persona)
        {
            var departamentoParameter = departamento.HasValue ?
                new ObjectParameter("departamento", departamento) :
                new ObjectParameter("departamento", typeof(long));
    
            var personaParameter = persona.HasValue ?
                new ObjectParameter("persona", persona) :
                new ObjectParameter("persona", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateDepartamentoPersona", departamentoParameter, personaParameter);
        }
    
        public virtual int updateDepPropietario(Nullable<long> dep, Nullable<long> persona)
        {
            var depParameter = dep.HasValue ?
                new ObjectParameter("dep", dep) :
                new ObjectParameter("dep", typeof(long));
    
            var personaParameter = persona.HasValue ?
                new ObjectParameter("persona", persona) :
                new ObjectParameter("persona", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updateDepPropietario", depParameter, personaParameter);
        }
    
        public virtual int updateDepPropietarioNull(Nullable<long> dep)
        {
            var depParameter = dep.HasValue ?
                new ObjectParameter("dep", dep) :
                new ObjectParameter("dep", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updateDepPropietarioNull", depParameter);
        }
    
        public virtual int updateDireccion(Nullable<long> direccion, Nullable<long> condominio, string calle, Nullable<int> numero, Nullable<long> comuna)
        {
            var direccionParameter = direccion.HasValue ?
                new ObjectParameter("direccion", direccion) :
                new ObjectParameter("direccion", typeof(long));
    
            var condominioParameter = condominio.HasValue ?
                new ObjectParameter("condominio", condominio) :
                new ObjectParameter("condominio", typeof(long));
    
            var calleParameter = calle != null ?
                new ObjectParameter("calle", calle) :
                new ObjectParameter("calle", typeof(string));
    
            var numeroParameter = numero.HasValue ?
                new ObjectParameter("numero", numero) :
                new ObjectParameter("numero", typeof(int));
    
            var comunaParameter = comuna.HasValue ?
                new ObjectParameter("comuna", comuna) :
                new ObjectParameter("comuna", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updateDireccion", direccionParameter, condominioParameter, calleParameter, numeroParameter, comunaParameter);
        }
    
        public virtual int updateEdificio(Nullable<long> edificio, string nombre, Nullable<int> piso, Nullable<int> dep, Nullable<double> dimension)
        {
            var edificioParameter = edificio.HasValue ?
                new ObjectParameter("edificio", edificio) :
                new ObjectParameter("edificio", typeof(long));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var pisoParameter = piso.HasValue ?
                new ObjectParameter("piso", piso) :
                new ObjectParameter("piso", typeof(int));
    
            var depParameter = dep.HasValue ?
                new ObjectParameter("dep", dep) :
                new ObjectParameter("dep", typeof(int));
    
            var dimensionParameter = dimension.HasValue ?
                new ObjectParameter("dimension", dimension) :
                new ObjectParameter("dimension", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updateEdificio", edificioParameter, nombreParameter, pisoParameter, depParameter, dimensionParameter);
        }
    
        public virtual int updateEdificioGasto(Nullable<long> edificio, Nullable<long> gasto)
        {
            var edificioParameter = edificio.HasValue ?
                new ObjectParameter("edificio", edificio) :
                new ObjectParameter("edificio", typeof(long));
    
            var gastoParameter = gasto.HasValue ?
                new ObjectParameter("gasto", gasto) :
                new ObjectParameter("gasto", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updateEdificioGasto", edificioParameter, gastoParameter);
        }
    
        public virtual int updateEstadoLuzDep(Nullable<long> luz, Nullable<bool> estado)
        {
            var luzParameter = luz.HasValue ?
                new ObjectParameter("luz", luz) :
                new ObjectParameter("luz", typeof(long));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updateEstadoLuzDep", luzParameter, estadoParameter);
        }
    
        public virtual int updateEstadoLuzEdificio(Nullable<long> luz, Nullable<bool> estado)
        {
            var luzParameter = luz.HasValue ?
                new ObjectParameter("luz", luz) :
                new ObjectParameter("luz", typeof(long));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updateEstadoLuzEdificio", luzParameter, estadoParameter);
        }
    
        public virtual int updateEstadoMulta(Nullable<long> multa, Nullable<bool> estado)
        {
            var multaParameter = multa.HasValue ?
                new ObjectParameter("multa", multa) :
                new ObjectParameter("multa", typeof(long));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updateEstadoMulta", multaParameter, estadoParameter);
        }
    
        public virtual int updateEstSalida(Nullable<long> est, Nullable<long> boleta, string horaS, Nullable<int> total, Nullable<bool> estado)
        {
            var estParameter = est.HasValue ?
                new ObjectParameter("est", est) :
                new ObjectParameter("est", typeof(long));
    
            var boletaParameter = boleta.HasValue ?
                new ObjectParameter("boleta", boleta) :
                new ObjectParameter("boleta", typeof(long));
    
            var horaSParameter = horaS != null ?
                new ObjectParameter("horaS", horaS) :
                new ObjectParameter("horaS", typeof(string));
    
            var totalParameter = total.HasValue ?
                new ObjectParameter("total", total) :
                new ObjectParameter("total", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updateEstSalida", estParameter, boletaParameter, horaSParameter, totalParameter, estadoParameter);
        }
    
        public virtual int updateGasto(Nullable<long> gasto, Nullable<int> conserje, Nullable<int> guardia, Nullable<int> mantAreas, Nullable<int> camaras, Nullable<int> artAseo, Nullable<int> aseo, Nullable<int> ascensor, Nullable<int> agua, Nullable<int> otro, Nullable<int> total)
        {
            var gastoParameter = gasto.HasValue ?
                new ObjectParameter("gasto", gasto) :
                new ObjectParameter("gasto", typeof(long));
    
            var conserjeParameter = conserje.HasValue ?
                new ObjectParameter("conserje", conserje) :
                new ObjectParameter("conserje", typeof(int));
    
            var guardiaParameter = guardia.HasValue ?
                new ObjectParameter("guardia", guardia) :
                new ObjectParameter("guardia", typeof(int));
    
            var mantAreasParameter = mantAreas.HasValue ?
                new ObjectParameter("mantAreas", mantAreas) :
                new ObjectParameter("mantAreas", typeof(int));
    
            var camarasParameter = camaras.HasValue ?
                new ObjectParameter("camaras", camaras) :
                new ObjectParameter("camaras", typeof(int));
    
            var artAseoParameter = artAseo.HasValue ?
                new ObjectParameter("artAseo", artAseo) :
                new ObjectParameter("artAseo", typeof(int));
    
            var aseoParameter = aseo.HasValue ?
                new ObjectParameter("aseo", aseo) :
                new ObjectParameter("aseo", typeof(int));
    
            var ascensorParameter = ascensor.HasValue ?
                new ObjectParameter("ascensor", ascensor) :
                new ObjectParameter("ascensor", typeof(int));
    
            var aguaParameter = agua.HasValue ?
                new ObjectParameter("agua", agua) :
                new ObjectParameter("agua", typeof(int));
    
            var otroParameter = otro.HasValue ?
                new ObjectParameter("otro", otro) :
                new ObjectParameter("otro", typeof(int));
    
            var totalParameter = total.HasValue ?
                new ObjectParameter("total", total) :
                new ObjectParameter("total", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updateGasto", gastoParameter, conserjeParameter, guardiaParameter, mantAreasParameter, camarasParameter, artAseoParameter, aseoParameter, ascensorParameter, aguaParameter, otroParameter, totalParameter);
        }
    
        public virtual int updateHorario(Nullable<long> horario, Nullable<long> centro, string dia, string horaI, string horaT, string horarioC)
        {
            var horarioParameter = horario.HasValue ?
                new ObjectParameter("horario", horario) :
                new ObjectParameter("horario", typeof(long));
    
            var centroParameter = centro.HasValue ?
                new ObjectParameter("centro", centro) :
                new ObjectParameter("centro", typeof(long));
    
            var diaParameter = dia != null ?
                new ObjectParameter("dia", dia) :
                new ObjectParameter("dia", typeof(string));
    
            var horaIParameter = horaI != null ?
                new ObjectParameter("horaI", horaI) :
                new ObjectParameter("horaI", typeof(string));
    
            var horaTParameter = horaT != null ?
                new ObjectParameter("horaT", horaT) :
                new ObjectParameter("horaT", typeof(string));
    
            var horarioCParameter = horarioC != null ?
                new ObjectParameter("horarioC", horarioC) :
                new ObjectParameter("horarioC", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updateHorario", horarioParameter, centroParameter, diaParameter, horaIParameter, horaTParameter, horarioCParameter);
        }
    
        public virtual int updateLuzDep(Nullable<long> luz, string codigo)
        {
            var luzParameter = luz.HasValue ?
                new ObjectParameter("luz", luz) :
                new ObjectParameter("luz", typeof(long));
    
            var codigoParameter = codigo != null ?
                new ObjectParameter("codigo", codigo) :
                new ObjectParameter("codigo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updateLuzDep", luzParameter, codigoParameter);
        }
    
        public virtual int updateLuzEdificio(Nullable<long> luz, string codigo)
        {
            var luzParameter = luz.HasValue ?
                new ObjectParameter("luz", luz) :
                new ObjectParameter("luz", typeof(long));
    
            var codigoParameter = codigo != null ?
                new ObjectParameter("codigo", codigo) :
                new ObjectParameter("codigo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updateLuzEdificio", luzParameter, codigoParameter);
        }
    
        public virtual int updateMulta(Nullable<long> idMulta, Nullable<long> departamento, Nullable<int> multa, string motivo, Nullable<bool> estado)
        {
            var idMultaParameter = idMulta.HasValue ?
                new ObjectParameter("idMulta", idMulta) :
                new ObjectParameter("idMulta", typeof(long));
    
            var departamentoParameter = departamento.HasValue ?
                new ObjectParameter("departamento", departamento) :
                new ObjectParameter("departamento", typeof(long));
    
            var multaParameter = multa.HasValue ?
                new ObjectParameter("multa", multa) :
                new ObjectParameter("multa", typeof(int));
    
            var motivoParameter = motivo != null ?
                new ObjectParameter("motivo", motivo) :
                new ObjectParameter("motivo", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updateMulta", idMultaParameter, departamentoParameter, multaParameter, motivoParameter, estadoParameter);
        }
    
        public virtual int UpdatePassword(string pass, Nullable<long> per)
        {
            var passParameter = pass != null ?
                new ObjectParameter("pass", pass) :
                new ObjectParameter("pass", typeof(string));
    
            var perParameter = per.HasValue ?
                new ObjectParameter("per", per) :
                new ObjectParameter("per", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdatePassword", passParameter, perParameter);
        }
    
        public virtual int UpdatePersona(Nullable<long> id, string telefono, string correo)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("telefono", telefono) :
                new ObjectParameter("telefono", typeof(string));
    
            var correoParameter = correo != null ?
                new ObjectParameter("correo", correo) :
                new ObjectParameter("correo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdatePersona", idParameter, telefonoParameter, correoParameter);
        }
    
        public virtual int UpdatePersonaAdm(Nullable<long> rol, Nullable<long> persona, string nom, string ape, string rut, string telefono, string correo, string sexo, Nullable<long> condominio, Nullable<long> condominio2)
        {
            var rolParameter = rol.HasValue ?
                new ObjectParameter("rol", rol) :
                new ObjectParameter("rol", typeof(long));
    
            var personaParameter = persona.HasValue ?
                new ObjectParameter("persona", persona) :
                new ObjectParameter("persona", typeof(long));
    
            var nomParameter = nom != null ?
                new ObjectParameter("nom", nom) :
                new ObjectParameter("nom", typeof(string));
    
            var apeParameter = ape != null ?
                new ObjectParameter("ape", ape) :
                new ObjectParameter("ape", typeof(string));
    
            var rutParameter = rut != null ?
                new ObjectParameter("rut", rut) :
                new ObjectParameter("rut", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("telefono", telefono) :
                new ObjectParameter("telefono", typeof(string));
    
            var correoParameter = correo != null ?
                new ObjectParameter("correo", correo) :
                new ObjectParameter("correo", typeof(string));
    
            var sexoParameter = sexo != null ?
                new ObjectParameter("sexo", sexo) :
                new ObjectParameter("sexo", typeof(string));
    
            var condominioParameter = condominio.HasValue ?
                new ObjectParameter("condominio", condominio) :
                new ObjectParameter("condominio", typeof(long));
    
            var condominio2Parameter = condominio2.HasValue ?
                new ObjectParameter("condominio2", condominio2) :
                new ObjectParameter("condominio2", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdatePersonaAdm", rolParameter, personaParameter, nomParameter, apeParameter, rutParameter, telefonoParameter, correoParameter, sexoParameter, condominioParameter, condominio2Parameter);
        }
    
        public virtual int UpdatePersonal(Nullable<long> rol, Nullable<long> persona, string nom, string ape, string rut, string telefono, string correo, string sexo)
        {
            var rolParameter = rol.HasValue ?
                new ObjectParameter("rol", rol) :
                new ObjectParameter("rol", typeof(long));
    
            var personaParameter = persona.HasValue ?
                new ObjectParameter("persona", persona) :
                new ObjectParameter("persona", typeof(long));
    
            var nomParameter = nom != null ?
                new ObjectParameter("nom", nom) :
                new ObjectParameter("nom", typeof(string));
    
            var apeParameter = ape != null ?
                new ObjectParameter("ape", ape) :
                new ObjectParameter("ape", typeof(string));
    
            var rutParameter = rut != null ?
                new ObjectParameter("rut", rut) :
                new ObjectParameter("rut", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("telefono", telefono) :
                new ObjectParameter("telefono", typeof(string));
    
            var correoParameter = correo != null ?
                new ObjectParameter("correo", correo) :
                new ObjectParameter("correo", typeof(string));
    
            var sexoParameter = sexo != null ?
                new ObjectParameter("sexo", sexo) :
                new ObjectParameter("sexo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdatePersonal", rolParameter, personaParameter, nomParameter, apeParameter, rutParameter, telefonoParameter, correoParameter, sexoParameter);
        }
    
        public virtual int updatePropietarioFull(Nullable<long> id, string nombre, string apellido, string rut, string telefono, string correo, Nullable<bool> luz, string sexo)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var apellidoParameter = apellido != null ?
                new ObjectParameter("apellido", apellido) :
                new ObjectParameter("apellido", typeof(string));
    
            var rutParameter = rut != null ?
                new ObjectParameter("rut", rut) :
                new ObjectParameter("rut", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("telefono", telefono) :
                new ObjectParameter("telefono", typeof(string));
    
            var correoParameter = correo != null ?
                new ObjectParameter("correo", correo) :
                new ObjectParameter("correo", typeof(string));
    
            var luzParameter = luz.HasValue ?
                new ObjectParameter("luz", luz) :
                new ObjectParameter("luz", typeof(bool));
    
            var sexoParameter = sexo != null ?
                new ObjectParameter("sexo", sexo) :
                new ObjectParameter("sexo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updatePropietarioFull", idParameter, nombreParameter, apellidoParameter, rutParameter, telefonoParameter, correoParameter, luzParameter, sexoParameter);
        }
    
        public virtual int updateReserva(Nullable<long> reserva, Nullable<long> dep, Nullable<long> centro, Nullable<long> horario)
        {
            var reservaParameter = reserva.HasValue ?
                new ObjectParameter("reserva", reserva) :
                new ObjectParameter("reserva", typeof(long));
    
            var depParameter = dep.HasValue ?
                new ObjectParameter("dep", dep) :
                new ObjectParameter("dep", typeof(long));
    
            var centroParameter = centro.HasValue ?
                new ObjectParameter("centro", centro) :
                new ObjectParameter("centro", typeof(long));
    
            var horarioParameter = horario.HasValue ?
                new ObjectParameter("horario", horario) :
                new ObjectParameter("horario", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updateReserva", reservaParameter, depParameter, centroParameter, horarioParameter);
        }
    
        public virtual int UpdateTotalEst(Nullable<long> estacionamiento, Nullable<int> total)
        {
            var estacionamientoParameter = estacionamiento.HasValue ?
                new ObjectParameter("estacionamiento", estacionamiento) :
                new ObjectParameter("estacionamiento", typeof(long));
    
            var totalParameter = total.HasValue ?
                new ObjectParameter("total", total) :
                new ObjectParameter("total", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateTotalEst", estacionamientoParameter, totalParameter);
        }
    
        public virtual int deleteCentro(Nullable<long> centro)
        {
            var centroParameter = centro.HasValue ?
                new ObjectParameter("centro", centro) :
                new ObjectParameter("centro", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("deleteCentro", centroParameter);
        }
    
        public virtual int deleteConserje(Nullable<long> persona)
        {
            var personaParameter = persona.HasValue ?
                new ObjectParameter("persona", persona) :
                new ObjectParameter("persona", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("deleteConserje", personaParameter);
        }
    
        public virtual int updateEstacionamiento(Nullable<long> estacionamiento, Nullable<long> edificio, string numero, Nullable<int> precio)
        {
            var estacionamientoParameter = estacionamiento.HasValue ?
                new ObjectParameter("estacionamiento", estacionamiento) :
                new ObjectParameter("estacionamiento", typeof(long));
    
            var edificioParameter = edificio.HasValue ?
                new ObjectParameter("edificio", edificio) :
                new ObjectParameter("edificio", typeof(long));
    
            var numeroParameter = numero != null ?
                new ObjectParameter("numero", numero) :
                new ObjectParameter("numero", typeof(string));
    
            var precioParameter = precio.HasValue ?
                new ObjectParameter("precio", precio) :
                new ObjectParameter("precio", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updateEstacionamiento", estacionamientoParameter, edificioParameter, numeroParameter, precioParameter);
        }
    
        public virtual int deleteHorario(Nullable<long> horario)
        {
            var horarioParameter = horario.HasValue ?
                new ObjectParameter("horario", horario) :
                new ObjectParameter("horario", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("deleteHorario", horarioParameter);
        }
    
        public virtual int updateEstadoHorario(Nullable<long> horario, Nullable<bool> estado)
        {
            var horarioParameter = horario.HasValue ?
                new ObjectParameter("horario", horario) :
                new ObjectParameter("horario", typeof(long));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updateEstadoHorario", horarioParameter, estadoParameter);
        }
    
        public virtual int deleteLuzDep(Nullable<long> luz)
        {
            var luzParameter = luz.HasValue ?
                new ObjectParameter("luz", luz) :
                new ObjectParameter("luz", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("deleteLuzDep", luzParameter);
        }
    
        public virtual int deleteLuzEdificio(Nullable<long> luz)
        {
            var luzParameter = luz.HasValue ?
                new ObjectParameter("luz", luz) :
                new ObjectParameter("luz", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("deleteLuzEdificio", luzParameter);
        }
    
        public virtual int deleteMensaje(Nullable<long> mensaje)
        {
            var mensajeParameter = mensaje.HasValue ?
                new ObjectParameter("mensaje", mensaje) :
                new ObjectParameter("mensaje", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("deleteMensaje", mensajeParameter);
        }
    
        public virtual int insertMensaje(Nullable<long> tipo, Nullable<long> persona, string descripcion, string emisor, string destinatario, Nullable<bool> estado)
        {
            var tipoParameter = tipo.HasValue ?
                new ObjectParameter("tipo", tipo) :
                new ObjectParameter("tipo", typeof(long));
    
            var personaParameter = persona.HasValue ?
                new ObjectParameter("persona", persona) :
                new ObjectParameter("persona", typeof(long));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            var emisorParameter = emisor != null ?
                new ObjectParameter("emisor", emisor) :
                new ObjectParameter("emisor", typeof(string));
    
            var destinatarioParameter = destinatario != null ?
                new ObjectParameter("destinatario", destinatario) :
                new ObjectParameter("destinatario", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insertMensaje", tipoParameter, personaParameter, descripcionParameter, emisorParameter, destinatarioParameter, estadoParameter);
        }
    
        public virtual int updateMensaje(Nullable<long> mensaje, Nullable<long> tipo, Nullable<long> persona, string descripcion, string emisor, string destinatario, Nullable<bool> estado)
        {
            var mensajeParameter = mensaje.HasValue ?
                new ObjectParameter("mensaje", mensaje) :
                new ObjectParameter("mensaje", typeof(long));
    
            var tipoParameter = tipo.HasValue ?
                new ObjectParameter("tipo", tipo) :
                new ObjectParameter("tipo", typeof(long));
    
            var personaParameter = persona.HasValue ?
                new ObjectParameter("persona", persona) :
                new ObjectParameter("persona", typeof(long));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            var emisorParameter = emisor != null ?
                new ObjectParameter("emisor", emisor) :
                new ObjectParameter("emisor", typeof(string));
    
            var destinatarioParameter = destinatario != null ?
                new ObjectParameter("destinatario", destinatario) :
                new ObjectParameter("destinatario", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updateMensaje", mensajeParameter, tipoParameter, personaParameter, descripcionParameter, emisorParameter, destinatarioParameter, estadoParameter);
        }
    
        public virtual int updateTurno(Nullable<long> turno, string descripcion, string fechaI, string fechaT)
        {
            var turnoParameter = turno.HasValue ?
                new ObjectParameter("turno", turno) :
                new ObjectParameter("turno", typeof(long));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            var fechaIParameter = fechaI != null ?
                new ObjectParameter("fechaI", fechaI) :
                new ObjectParameter("fechaI", typeof(string));
    
            var fechaTParameter = fechaT != null ?
                new ObjectParameter("fechaT", fechaT) :
                new ObjectParameter("fechaT", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updateTurno", turnoParameter, descripcionParameter, fechaIParameter, fechaTParameter);
        }
    
        public virtual ObjectResult<listaTurno_Result> listaTurno(Nullable<long> conserje)
        {
            var conserjeParameter = conserje.HasValue ?
                new ObjectParameter("conserje", conserje) :
                new ObjectParameter("conserje", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<listaTurno_Result>("listaTurno", conserjeParameter);
        }
    
        public virtual int insertBoletaMulta(Nullable<long> persona, Nullable<long> costo, Nullable<long> dep, string codigo)
        {
            var personaParameter = persona.HasValue ?
                new ObjectParameter("persona", persona) :
                new ObjectParameter("persona", typeof(long));
    
            var costoParameter = costo.HasValue ?
                new ObjectParameter("costo", costo) :
                new ObjectParameter("costo", typeof(long));
    
            var depParameter = dep.HasValue ?
                new ObjectParameter("dep", dep) :
                new ObjectParameter("dep", typeof(long));
    
            var codigoParameter = codigo != null ?
                new ObjectParameter("codigo", codigo) :
                new ObjectParameter("codigo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insertBoletaMulta", personaParameter, costoParameter, depParameter, codigoParameter);
        }
    
        public virtual int asignarBodega(Nullable<long> bodega, Nullable<long> dep)
        {
            var bodegaParameter = bodega.HasValue ?
                new ObjectParameter("bodega", bodega) :
                new ObjectParameter("bodega", typeof(long));
    
            var depParameter = dep.HasValue ?
                new ObjectParameter("dep", dep) :
                new ObjectParameter("dep", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("asignarBodega", bodegaParameter, depParameter);
        }
    
        public virtual int asignarBoletaMulta(Nullable<long> multa, Nullable<bool> boleta)
        {
            var multaParameter = multa.HasValue ?
                new ObjectParameter("multa", multa) :
                new ObjectParameter("multa", typeof(long));
    
            var boletaParameter = boleta.HasValue ?
                new ObjectParameter("boleta", boleta) :
                new ObjectParameter("boleta", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("asignarBoletaMulta", multaParameter, boletaParameter);
        }
    
        public virtual int asignarEstacionamiento(Nullable<long> estacionamiento, Nullable<long> dep)
        {
            var estacionamientoParameter = estacionamiento.HasValue ?
                new ObjectParameter("estacionamiento", estacionamiento) :
                new ObjectParameter("estacionamiento", typeof(long));
    
            var depParameter = dep.HasValue ?
                new ObjectParameter("dep", dep) :
                new ObjectParameter("dep", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("asignarEstacionamiento", estacionamientoParameter, depParameter);
        }
    
        public virtual int AsignarProrroteo(Nullable<long> departamento, Nullable<double> porroteo)
        {
            var departamentoParameter = departamento.HasValue ?
                new ObjectParameter("departamento", departamento) :
                new ObjectParameter("departamento", typeof(long));
    
            var porroteoParameter = porroteo.HasValue ?
                new ObjectParameter("porroteo", porroteo) :
                new ObjectParameter("porroteo", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AsignarProrroteo", departamentoParameter, porroteoParameter);
        }
    
        public virtual int insetBodega(Nullable<long> edificio, Nullable<double> dimension, string numero)
        {
            var edificioParameter = edificio.HasValue ?
                new ObjectParameter("edificio", edificio) :
                new ObjectParameter("edificio", typeof(long));
    
            var dimensionParameter = dimension.HasValue ?
                new ObjectParameter("dimension", dimension) :
                new ObjectParameter("dimension", typeof(double));
    
            var numeroParameter = numero != null ?
                new ObjectParameter("numero", numero) :
                new ObjectParameter("numero", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insetBodega", edificioParameter, dimensionParameter, numeroParameter);
        }
    
        public virtual int updateBodega(Nullable<long> bodega, Nullable<long> edificio, Nullable<double> dimension, string numero)
        {
            var bodegaParameter = bodega.HasValue ?
                new ObjectParameter("bodega", bodega) :
                new ObjectParameter("bodega", typeof(long));
    
            var edificioParameter = edificio.HasValue ?
                new ObjectParameter("edificio", edificio) :
                new ObjectParameter("edificio", typeof(long));
    
            var dimensionParameter = dimension.HasValue ?
                new ObjectParameter("dimension", dimension) :
                new ObjectParameter("dimension", typeof(double));
    
            var numeroParameter = numero != null ?
                new ObjectParameter("numero", numero) :
                new ObjectParameter("numero", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updateBodega", bodegaParameter, edificioParameter, dimensionParameter, numeroParameter);
        }
    
        public virtual int insertEstacionamientoVisita(string dep, Nullable<long> edificio, string patente, string horaE, Nullable<int> total)
        {
            var depParameter = dep != null ?
                new ObjectParameter("dep", dep) :
                new ObjectParameter("dep", typeof(string));
    
            var edificioParameter = edificio.HasValue ?
                new ObjectParameter("edificio", edificio) :
                new ObjectParameter("edificio", typeof(long));
    
            var patenteParameter = patente != null ?
                new ObjectParameter("patente", patente) :
                new ObjectParameter("patente", typeof(string));
    
            var horaEParameter = horaE != null ?
                new ObjectParameter("horaE", horaE) :
                new ObjectParameter("horaE", typeof(string));
    
            var totalParameter = total.HasValue ?
                new ObjectParameter("total", total) :
                new ObjectParameter("total", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insertEstacionamientoVisita", depParameter, edificioParameter, patenteParameter, horaEParameter, totalParameter);
        }
    
        public virtual int updateEstacionamientoVisita(Nullable<long> est, Nullable<long> boleta, string dep, Nullable<long> edificio, string patente, string horaE, string horaS, Nullable<bool> estado, Nullable<int> total)
        {
            var estParameter = est.HasValue ?
                new ObjectParameter("est", est) :
                new ObjectParameter("est", typeof(long));
    
            var boletaParameter = boleta.HasValue ?
                new ObjectParameter("boleta", boleta) :
                new ObjectParameter("boleta", typeof(long));
    
            var depParameter = dep != null ?
                new ObjectParameter("dep", dep) :
                new ObjectParameter("dep", typeof(string));
    
            var edificioParameter = edificio.HasValue ?
                new ObjectParameter("edificio", edificio) :
                new ObjectParameter("edificio", typeof(long));
    
            var patenteParameter = patente != null ?
                new ObjectParameter("patente", patente) :
                new ObjectParameter("patente", typeof(string));
    
            var horaEParameter = horaE != null ?
                new ObjectParameter("horaE", horaE) :
                new ObjectParameter("horaE", typeof(string));
    
            var horaSParameter = horaS != null ?
                new ObjectParameter("horaS", horaS) :
                new ObjectParameter("horaS", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(bool));
    
            var totalParameter = total.HasValue ?
                new ObjectParameter("total", total) :
                new ObjectParameter("total", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updateEstacionamientoVisita", estParameter, boletaParameter, depParameter, edificioParameter, patenteParameter, horaEParameter, horaSParameter, estadoParameter, totalParameter);
        }
    
        public virtual int insertBodega(Nullable<long> edificio, Nullable<double> dimension, string numero)
        {
            var edificioParameter = edificio.HasValue ?
                new ObjectParameter("edificio", edificio) :
                new ObjectParameter("edificio", typeof(long));
    
            var dimensionParameter = dimension.HasValue ?
                new ObjectParameter("dimension", dimension) :
                new ObjectParameter("dimension", typeof(double));
    
            var numeroParameter = numero != null ?
                new ObjectParameter("numero", numero) :
                new ObjectParameter("numero", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insertBodega", edificioParameter, dimensionParameter, numeroParameter);
        }
    
        public virtual int asignarDimensionDep(Nullable<long> departamento, Nullable<double> dimension)
        {
            var departamentoParameter = departamento.HasValue ?
                new ObjectParameter("departamento", departamento) :
                new ObjectParameter("departamento", typeof(long));
    
            var dimensionParameter = dimension.HasValue ?
                new ObjectParameter("dimension", dimension) :
                new ObjectParameter("dimension", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("asignarDimensionDep", departamentoParameter, dimensionParameter);
        }
    }
}
